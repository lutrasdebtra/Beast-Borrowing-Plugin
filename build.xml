<!-- Build LanguageSequenceGen model -->
<project basedir="." default="build_jar_all_LanguageSequenceGen" name="BUILD_LanguageSequenceGen">
	<description>
 	Build LanguageSequenceGen.
 	JUnit test is available for this build.
 	$Id: build_LanguageSequenceGen.xml $
 	</description>
	<!-- set global properties for this build -->
	<property name="srcLanguageSequenceGen" location="src" />
	<property name="buildLanguageSequenceGen" location="build" />
	<property name="libLanguageSequenceGen" location="lib" />
	<property name="release_dir" value="release" />
	<property name="distLanguageSequenceGen" location="${buildLanguageSequenceGen}/dist" />
	<property name="beast2path" location="../beast2" />
	<property name="libBeast2" location="${beast2path}/lib" />
	<property name="srcBeast2" location="${beast2path}/src" />
	<property name="beast2classpath" location="${beast2path}/build" />
	<property name="BEASTLabsclasspath" location="../BEASTLabs/build" />
	<property name="Add_on_dir" value="${release_dir}/package" />

	<import file="${beast2path}/build.xml" />

	<property name="main_class_BEAST" value="beast.app.BeastMCMC" />
	<property name="main_class_LanguageSequenceGen" value="beast.app.seqgen.LanguageSequenceGenInterface" />
	<property name="report" value="${buildLanguageSequenceGen}/junitreport"/>


	<path id="classpath">
		<pathelement path="${buildLanguageSequenceGen}"/>
		<pathelement path="${beast2classpath}"/>
		<pathelement path="${BEASTLabsclasspath}"/>
	</path>

	<!-- start -->
	<target name="initLanguageSequenceGen">
		<echo message="${ant.project.name}: ${ant.file}" />
	</target>
	<target name="cleanLanguageSequenceGen">
		<delete dir="${buildLanguageSequenceGen}" />
	</target>

	<!-- clean previous build, and then compile Java source code, and Juint test -->
	<target name="build_all_LanguageSequenceGen" depends="cleanLanguageSequenceGen,compile-allLanguageSequenceGen,junitLanguageSequenceGen" description="Clean and Build all run-time stuff">
	</target>

	<!-- clean previous build, compile Java source code, and Junit test, and make the beast.jar and beauti.jar -->
	<target name="build_jar_all_LanguageSequenceGen" depends="cleanLanguageSequenceGen,compile-allLanguageSequenceGen,junitLanguageSequenceGen,dist_all_LanguageSequenceGen" description="Clean and Build all run-time stuff">
	</target>

	<!-- No JUnit Test, clean previous build, compile Java source code, and make the LanguageSequenceGen.jar and beauti.jar -->
	<target name="build_jar_all_LanguageSequenceGen_NoJUnitTest" depends="cleanLanguageSequenceGen,compile-allLanguageSequenceGen,dist_all_LanguageSequenceGen" description="Clean and Build all run-time stuff">
	</target>

	<!-- compile Java source code -->
	<target name="compile-allLanguageSequenceGen" depends="initLanguageSequenceGen,compile-all">
		<!-- Capture the path as a delimited property using the refid attribute -->
		<property name="myclasspath" refid="classpath"/>
		<!-- Emit the property to the ant console -->
		<echo message="Classpath = ${myclasspath}"/>
		
		<mkdir dir="${buildLanguageSequenceGen}" />
		<!-- Compile the java code from ${srcLanguageSequenceGen} into ${buildLanguageSequenceGen} /bin -->
		<javac srcdir="${srcLanguageSequenceGen}" destdir="${buildLanguageSequenceGen}" classpathref="classpath" fork="true" memoryinitialsize="256m" memorymaximumsize="256m">
			<include name="beast/**/**" />
			<!-- compile JUnit test classes -->
			<include name="test/beast/**" />
		</javac>
		<echo message="Successfully compiled." />
	</target>

	<!-- make the beast.jar and beauti.jar -->
	<target name="dist_all_LanguageSequenceGen" depends="compile-allLanguageSequenceGen" description="create LanguageSequenceGen jar">
		<!-- Create the distribution directory -->
		<mkdir dir="${distLanguageSequenceGen}" />
		<!-- Put everything in ${buildLanguageSequenceGen} into the beast.jar file -->
		<jar jarfile="${distLanguageSequenceGen}/LanguageSequenceGen.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${main_class_LanguageSequenceGen}" />
			</manifest>
			<fileset dir="${buildLanguageSequenceGen}">
				<include name="beast/**/*.class" />
			</fileset>
			<fileset dir="${BEASTLabsclasspath}">
							<include name="**/*.class"/>
			</fileset>
			<fileset dir="${beast2classpath}">
				<include name="beast/**/*.class" />
				<include name="beast/**/*.properties" />
				<include name="beast/**/*.png" />
				<include name="beagle/**/*.class" />
				<include name="org/**/*.class" />
			</fileset>
		</jar>
		<jar jarfile="${distLanguageSequenceGen}/LanguageSequenceGen.src.jar">
			<fileset dir="${srcLanguageSequenceGen}">
				<include name="beast/**/*.java" />
				<include name="beast/**/*.png" />
				<include name="beast/**/*.xsl" />
			</fileset>
		</jar>
		<jar jarfile="${distLanguageSequenceGen}/LanguageSequenceGen.addon.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
			<fileset dir="${buildLanguageSequenceGen}">
				<include name="**/*.class" />
				<include name="**/*.properties" />
			</fileset>
		</jar>
	</target>

	<!-- run beast.jar -->
	<target name="run_LanguageSequenceGen">
		<java jar="${distLanguageSequenceGen}/LanguageSequenceGen.jar" fork="true" />
	</target>

	<!-- JUnit test -->
	<target name="junitLanguageSequenceGen">
		<mkdir dir="${report}" />
		<junit printsummary="yes">
			<!--showoutput='yes'-->
			<classpath>
				<path refid="classpath" />
				<path location="${buildLanguageSequenceGen}" />
			</classpath>
			<formatter type="xml" />
			<batchtest fork="yes" todir="${report}">
				<fileset dir="${srcLanguageSequenceGen}">
					<include name="test/**/*Test.java"/>
				</fileset>
				<fileset dir="${srcBeast2}">
					<include name="test/beast/integration/**/*Test.java"/>
					<exclude name="test/beast/integration/**/ResumeTest.java"/>
				</fileset>
			</batchtest>
		</junit>
		<echo message="JUnit test finished." />
	</target>
	<target name="junitreport">
		<junitreport todir="${report}">
			<fileset dir="${report}" includes="*.xml"/>
			<report format="frames" todir="${report}"/>
		</junitreport>
		<echo message="JUnit test report finished." />
	</target>
	<target name="addon"
 	depends="build_jar_all_LanguageSequenceGen_NoJUnitTest"
 	description="release BEAST 2 package version of LanguageSequenceGen">
		<delete dir="${Add_on_dir}" />
		<!-- Create the release directory -->
		<mkdir dir="${Add_on_dir}" />
		<mkdir dir="${Add_on_dir}/lib" />
		<mkdir dir="${Add_on_dir}/examples" />
		<copy todir="${Add_on_dir}/lib">
			<fileset dir="${distLanguageSequenceGen}" includes="LanguageSequenceGen.addon.jar" />
		</copy>
		<copy todir="${Add_on_dir}">
			<fileset dir="${distLanguageSequenceGen}" includes="LanguageSequenceGen.src.jar" />
		</copy>
		<copy todir="${Add_on_dir}">
			<fileset file="version.xml" />
		</copy>
		<jar jarfile="${distLanguageSequenceGen}/LanguageSequenceGen.addon.zip">
			<fileset dir="${Add_on_dir}">
				<include name="**/*" />
			</fileset>
		</jar>
		<echo message="Package version release is finished." />
	</target>
</project>